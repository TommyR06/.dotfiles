#        ___  ________     
#       |\  \|\_____  \    
#       \ \  \|____|\ /_   
#        \ \  \    \|\  \  
#         \ \  \  __\_\  \ 
#          \ \__\|\_______\
#           \|__|\|_______| 
# 
# Config file for I3 Window Manager.
# Ascii text art maded with: 
#   https://www.coolgenerator.com/ascii-text-generator
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
#
# i3 config file (v4)
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
# ------------------------------------------------



# ------------------------------------------------
#               Global Setting
# ------------------------------------------------

set $mod Mod4

# Temporary execution for loading .Xresources
exec --no-startup-id xrdb $HOME/.Xresources

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:JetBrainsMono Nerd Font Mono Regular 10

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float pixel 1

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet



# ------------------------------------------------
#               Keybindings
# ------------------------------------------------

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal (default is i3-sensible-terminal)
set $myTerm i3-sensible-terminal
bindsym $mod+Return exec $myTerm

# kill focused window
bindsym $mod+Shift+c kill

# start dmenu (a program launcher)
bindsym $mod+Shift+Return exec --no-startup-id dmenu_run

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split orientation
bindsym $mod+z split h
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Workspace names
# 
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# take a screenshot
# to change saving dir location type:
# > gsettings set org.gnome.gnome-screenshot auto-save-directory "file:///home/$USER/Pictures/Screenshots"
bindsym $mod+Print exec --no-startup-id gnome-screenshot
# lockscreen
bindsym $mod+Shift+z exec --no-startup-id i3lock-fancy 

# reload the configuration file
bindsym $mod+Ctrl+r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# default exit i3 (logs you out of your X session)
#bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# custom exit i3 (logs you out of your X session)
bindsym $mod+Shift+q exec sh -c '[ $(echo "NO\nYES" | dmenu -nf "#ECEFF4" -nb "#2E3440" -sf "#ECEFF4"  -sb "#BF616A" -i -p "Really exit i3 X session?") = "YES" ] && i3-msg exit' 

# ------------------------------------------------
#       Open in floating mode
# ------------------------------------------------

for_window [class="Gimp"] floating enable


# ------------------------------------------------
#               Modes
# ------------------------------------------------

# Resize mode (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Press $mod+g to enter the gap mode. 
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) 
# or 0 (remove gaps for current workspace). If you also press Shift 
# with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#	status_command i3status
#
#}



# ------------------------------------------------
#               Autostart apps
# ------------------------------------------------

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id nitrogen --restore
exec --no-startup-id compton -b --config $HOME/.config/compton/compton.conf



# ------------------------------------------------
#               Colors
# ------------------------------------------------

# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
#   set_from_resource $<name> <resource_name> <fallback>
# Note: the fallback values are the VGA colors
# 
set_from_resource $nord0    i3wm.color0   #000000
set_from_resource $nord1    i3wm.color1   #c0c0c0
set_from_resource $nord2    i3wm.color2   #808080
set_from_resource $nord3    i3wm.color3   #ffffff
set_from_resource $nord4    i3wm.color4   #800000
set_from_resource $nord5    i3wm.color5   #ff0000
set_from_resource $nord6    i3wm.color6   #800080
set_from_resource $nord7    i3wm.color7   #ff00ff
set_from_resource $nord8    i3wm.color8   #008000
set_from_resource $nord9    i3wm.color9   #00ff00
set_from_resource $nord10   i3wm.color10  #808000
set_from_resource $nord11   i3wm.color11  #ffff00
set_from_resource $nord12   i3wm.color12  #000080
set_from_resource $nord13   i3wm.color13  #0000ff
set_from_resource $nord14   i3wm.color14  #008080
set_from_resource $nord15   i3wm.color15  #00ffff

# class                     border   backgr.    text    indicator   child_border
  client.focused            nord4    nord0      nord6   nord11      nord4
  client.focused_inactive   nord4    nord0      nord6   nord11      nord4
  client.unfocused          nord4    nord0      nord6   nord11      nord4
  client.urgent             nord4    nord0      nord6   nord11      nord4
  client.placeholder        nord4    nord0      nord6   nord11      nord4
  client.background                  nord0


 
# ------------------------------------------------
#               I3-gaps Settings
# ------------------------------------------------

# Set inner/outer gaps
gaps inner 8 
gaps outer 0 

# Additionally, you can issue commands with the followinAliasg syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on
